@{
    ViewData["Title"] = "New rental";
}

<h2>@ViewData["Title"]</h2>

<form id="new-rental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" required data-rule-validCustomer="true" type="text" class="form-control" value="" placeholder="Customer"/>
        </div>
    </div>     
    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-validMovie="true" type="text" class="form-control" value="" placeholder="Movie"/>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @await Html.PartialAsync("_ValidationScriptsPartial");

    <script>
        $(document).ready(function() {
            let vm = {
                movieIds: []
            };

            // Auto-completion for the customers

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead(
                {
                    highlight: true
                },
                {
                    name: 'customers',
                    display: 'name',
                    source: customers 
                }
            ).on("typeahead:select", function(e, customer) {
                vm.customerId = customer.id;
            });

            // Auto-completion for the movies

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('title'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead(
                {
                    highlight: true
                },
                {
                    name: 'movies',
                    display: 'title',
                    source: movies 
                }
            ).on("typeahead:select", function(e, movie) {
                vm.movieIds.push(movie.id);
                $("#movies").append('<li class="list-group-item">' + movie.title + '</li>');
                $("#movie").typeahead("val", "");
            });

            // Submitting the form

            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId != 0;
            }, "Select a valid customer,");

            $.validator.addMethod("validMovie", function () {
                return vm.movieIds.length > 0;
            }, "Add at least 1 movie.");

            let validator = $("#new-rental").validate({
                submitHandler: function() {
                    $.ajax({
                        url: "/api/rentals",
                        dataType: "json",
                        contentType: "application/json",
                        method: "POST",
                        data: JSON.stringify(vm)
                    }).done(function () {
                        toastr.success("Rentals successfully recorded!");

                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();
                        vm = {
                            movieIds = [];
                        }
                        validator.resetForm();
                    }).fail(function () {
                        toastr.error("Something unexpected happened.");
                    });

                    return false;
                }
            });
        });
    </script>
}